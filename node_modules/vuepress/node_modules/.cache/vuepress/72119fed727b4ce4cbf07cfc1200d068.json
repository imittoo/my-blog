{"remainingRequest":"/Users/meidongwei/Desktop/github/my-blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/meidongwei/Desktop/github/my-blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/meidongwei/Desktop/github/my-blog/docs/blog/page5.md?vue&type=template&id=44e82d4c&","dependencies":[{"path":"/Users/meidongwei/Desktop/github/my-blog/docs/blog/page5.md","mtime":1532946937278},{"path":"/Users/meidongwei/Desktop/github/my-blog/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/meidongwei/Desktop/github/my-blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/meidongwei/Desktop/github/my-blog/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/meidongwei/Desktop/github/my-blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/meidongwei/Desktop/github/my-blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1528996848000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"使用-electron-构建桌面应用\"><a class=\"header-anchor\" href=\"#使用-electron-构建桌面应用\" aria-hidden=\"true\">#</a> 使用 Electron 构建桌面应用</h1>\n<p>Electron 可以让我们可以用 HTML，CSS 和 JavaScript 来构建跨平台桌面应用程序。</p>\n<h2 id=\"目录结构\"><a class=\"header-anchor\" href=\"#目录结构\" aria-hidden=\"true\">#</a> 目录结构</h2>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>your-app/\n  ├── package.json\n  ├── main.js\n  └── index.html\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"开始\"><a class=\"header-anchor\" href=\"#开始\" aria-hidden=\"true\">#</a> 开始</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code><span class=\"token comment\"># 创建项目目录、初始化项目</span>\n<span class=\"token function\">cd</span> desktop <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mkdir</span> ele-app <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cd</span> ele-app\nyarn init\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>修改 package.json 文件</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// package.json</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"your-app\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"0.1.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"main\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"main.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"electron .\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>安装 Electron</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>yarn add electron -D\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>编写 main.js</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>app<span class=\"token punctuation\">,</span> BrowserWindow<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'electron'</span><span class=\"token punctuation\">)</span>\n  \n<span class=\"token comment\">// Keep a global reference of the window object, if you don't, the window will</span>\n<span class=\"token comment\">// be closed automatically when the JavaScript object is garbage collected.</span>\n<span class=\"token keyword\">let</span> win\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createWindow</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 创建浏览器窗口。</span>\n  win <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BrowserWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>width<span class=\"token punctuation\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 然后加载应用的 index.html。</span>\n  win<span class=\"token punctuation\">.</span><span class=\"token function\">loadFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 打开开发者工具</span>\n  win<span class=\"token punctuation\">.</span>webContents<span class=\"token punctuation\">.</span><span class=\"token function\">openDevTools</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 当 window 被关闭，这个事件会被触发。</span>\n  win<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'closed'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 取消引用 window 对象，如果你的应用支持多窗口的话，</span>\n    <span class=\"token comment\">// 通常会把多个 window 对象存放在一个数组里面，</span>\n    <span class=\"token comment\">// 与此同时，你应该删除相应的元素。</span>\n    win <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Electron 会在初始化后并准备</span>\n<span class=\"token comment\">// 创建浏览器窗口时，调用这个函数。</span>\n<span class=\"token comment\">// 部分 API 在 ready 事件触发后才能使用。</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ready'</span><span class=\"token punctuation\">,</span> createWindow<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 当全部窗口关闭时退出。</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window-all-closed'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 在 macOS 上，除非用户用 Cmd + Q 确定地退出，</span>\n  <span class=\"token comment\">// 否则绝大部分应用及其菜单栏会保持激活。</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>platform <span class=\"token operator\">!==</span> <span class=\"token string\">'darwin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">quit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'activate'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 在macOS上，当单击dock图标并且没有其他窗口打开时，</span>\n  <span class=\"token comment\">// 通常在应用程序中重新创建一个窗口。</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>win <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">createWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 在这个文件中，你可以续写应用剩下主进程代码。</span>\n<span class=\"token comment\">// 也可以拆分成几个文件，然后用 require 导入。</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>编写 index.html</p>\n<!--beforebegin--><div class=\"language-html extra-class\"><!--afterbegin--><pre v-pre class=\"language-html\"><code><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Hello World!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Hello World!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    We are using node <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>versions<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">)</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>,\n    Chrome <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>versions<span class=\"token punctuation\">.</span>chrome<span class=\"token punctuation\">)</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>,\n    and Electron <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>versions<span class=\"token punctuation\">.</span>electron<span class=\"token punctuation\">)</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>.\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>启动应用</p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>yarn start\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}